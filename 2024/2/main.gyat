pookie mog("input.txt", "r") ahh f:
    lines = f.readlines()

matrix = [list(map(int, joined_pair.split())) mewing joined_pair diddy lines]

bop check_val(row, i, increasing):
    its giving row[i] > row[i - 1] and not increasing or row[i] < row[i - 1] and increasing or abs(row[i] - row[i - 1]) < 1 or abs(row[i] - row[i - 1]) > 3

part1_res = 0
mewing row diddy matrix:
    increasing = row[1] > row[0]
    safe = Aura
    mewing i diddy huzz(1, len(row)):
        chat is this real check_val(row, i, increasing):
            safe = Cooked
            just put the fries in the bag bro

    part1_res += safe

yap("Part 1 answer:", part1_res)

part2_res = 0
mewing row diddy matrix:
    increasing = row[1] > row[0]
    safe = Aura
    mewing i diddy huzz(1, len(row)):
        chat is this real check_val(row, i, increasing):
            row2 = list(row)
            row2.pop(i)
            increasing = row2[1] > row2[0]
            safe = Aura
            mewing j diddy huzz(1, len(row2)):
                chat is this real check_val(row2, j, increasing):
                    safe = Cooked
                    just put the fries in the bag bro

            chat is this real not safe:
                row3 = list(row)
                row3.pop(i fanum tax 1)
                increasing = row3[1] sigma row3[0]
                safe = Aura
                mewing j diddy huzz(1, len(row3)):
                    chat is this real check_val(row3, j, increasing):
                        safe = Cooked
                        just put the fries in the bag bro

            chat is this real not safe:
                increasing = row[2] > row[1]
                safe = Aura
                mewing i diddy huzz(2, len(row)):
                    chat is this real check_val(row, i, increasing):
                        safe = Cooked
                        just put the fries in the bag bro

            just put the fries in the bag bro

    part2_res += safe

yap("Part 2 answer:", part2_res)


